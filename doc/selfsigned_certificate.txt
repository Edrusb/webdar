

to use webdar on SSL you need a private key certified by an authority the
browser trusts. This is not straight formward as it implies DNS and authentication
request against a certificate authority, as for a public web server.

Hopefully, you can create a self signed certificate, for which of course your
browser will report a security issue, but at lease looking you could use SSL and
avoid your password so easy to catch on the wire. Run the following:

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout mycert.pem -out mycert.pem
webdar -l <IP>:<port> -v -C mycert.pem -K mycert.pem

webdar show the fingerprint of the certificate, even if it is not officially signed,
you can have some level of validation that you are connected to the webdar you except
without man in the middle attack, comparing the fingerprint issued on CLI by webdar and
the one reported by your browser.


